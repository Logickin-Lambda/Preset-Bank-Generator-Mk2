fn process_preset_converter_options_validator( $options_gui ){

    $error_vec = vec_new(INT8)
    $gui_comp = $options_gui.gui_comp_lkup;

    // input field validation, temporary, will be replace with proper checking
    if strlen($gui_comp.input_path_text_box.children[0].str_full) == 0 {
        $error_vec.push($error_vec, safe_strcat(APP_MSGS.ERR_MISSING, $gui_comp.input_path_label))
    }

    if strlen($gui_comp.file_name_text_box.children[0].str_full)  == 0 {
        $error_vec.push($error_vec, safe_strcat(APP_MSGS.ERR_MISSING, $gui_comp.file_name_label))
    }

    if strlen($gui_comp.output_path_text_box.children[0].str_full)  == 0 {
        $error_vec.push($error_vec, safe_strcat(APP_MSGS.ERR_MISSING, $gui_comp.output_path_label))
    }  

    // checkbox validation
    $checked_export_as = $gui_comp.export_as_cards_cb.has_checked + $gui_comp.export_as_banks_cb.has_checked
    if $checked_export_as == 0 {
        $error_vec.push($error_vec, safe_strcat(APP_MSGS.ERR_MISSING_CB, $gui_comp.export_as_label))
    }   

    $checked_otmz = $gui_comp.otmz_none_cb.has_checked + $gui_comp.otmz_normal_cb.has_checked + $gui_comp.otmz_aggressive_cb.has_checked
    if $checked_otmz == 0 {
        $error_vec.push($error_vec, safe_strcat(APP_MSGS.ERR_MISSING_CB, $gui_comp.otmz_label))
    }   

    ret($error_vec)
}