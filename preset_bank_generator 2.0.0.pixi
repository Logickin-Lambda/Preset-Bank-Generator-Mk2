// *************************************************************************************************************
// Preset bank generator mk2
// 
// We (Acheney and Logickin) decided to make use of pixilang to build a program,
// to provide an eco-system for managing presents, with maximizing the advantage of the preset standards:
// 
// Including:
// - Patch Cards: Inspired by the accipiter preset module, Acheney expended the functionality
//		by adding presents export into their modules, so that user can export their presets
//		into the Acheney preset on the fly.
//
// - Patch Banks: Taking the compression into extreme, Logickin made a former program for
//	 	fitting all the preset data into a pattern, result in a highly compact, BUT immutable
// 		preset bank module. Ideal for user who just want to quickly switching the sound by keypresses.
// 	
// Ultmately, we will merge the two standards into one if SunVox provides update
// like writing into patterns inside metamodules on project play, 
// or supporting pixilang in SunVox, which is not possible at the moment.
//
// *************************************************************************************************************

// pixi file dependencies
include "lib/lkups/app_msgs.pixi"
include "lib/lkups/app_constants.pixi"
include "lib/models/app_setting.pixi"

include "lib/utils/show_log.pixi"
include "lib/utils/vector.pixi"
include "lib/utils/string_utils.pixi"
include "lib/utils/result_utils.pixi"

include "lib/gui/components/color_utils.pixi"
include "lib/gui/components/GUI.pixi"
include "lib/gui/components/button.pixi"
include "lib/gui/components/checkbox.pixi"
include "lib/gui/components/gui_window_frame.pixi"
include "lib/gui/components/text_message.pixi"
include "lib/gui/popup.pixi"
include "lib/gui/preset_converter_options.pixi"
include "lib/gui/preset_converter_pager.pixi"

include "lib/validations/preset_converter_options_validator.pixi"

include "lib/modules_extraction/module_extractor.pixi"

include "lib/patches_generation/directory_generator.pixi"
include "lib/patches_generation/patch_cards_generator.pixi"
include "lib/patches_generation/patch_banks_generator.pixi"
include "main_function.pixi"

// 1. Start of the program, loading config if necessary, and
// Loading any global instance here, this is where SunVox instances and Lookup tables should be located
// Other than that, they should all be local variables

// App messages
APP_MSGS = app_msgs_lkup_new()

// SunVox instances
sv_mod_extr 	 = sv_new()
sv_mod_card 	 = sv_new()	// during generating patch cards
sv_mod_bank_core = sv_new()	// during generating patch bank interanl pattern storage
sv_mod_bank_surf = sv_new()	// during generating patch bank surface control logic
sv_mod_bank_xprt = sv_new()	// during exporting all the banks as Metatron has spread his wings

main() halt 