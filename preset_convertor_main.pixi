// *************************************************************************************************************
// Preset bank generator mk2
// 
// We (Acheney and Logickin) decided to make use of pixilang to build a program,
// to provide an eco-system for managing presents, with maximizing the advantage of the reset standards:
// 
// Including:
// - Patch Cards: Inspired by the accipiter preset module, Acheney expended the functionality
//		by adding presents export into their modules, so that user can export their presets
//		into the Acheney preset on the fly.
//
// - Patch Banks: Taking the compression into extreme, Logickin made a former program for
//	 	fitting all the preset data into a pattern, result in a highly compact, BUT immutable
// 		preset bank module. Ideal for user who just want to quickly switching the sound by keypresses.
// 	
// Ultmately, we will merge the two standards into one if SunVox provides update
// like writing into patterns inside metamodules on project play, 
// or supporting pixilang in SunVox, which is not possible at the moment.
//
// *************************************************************************************************************

// pixi file dependencies
	include "lib/utils/show_log.pixi"
	include "lib/utils/vector.pixi"

	include "lib/gui/components/color_utils.pixi"
	include "lib/gui/components/GUI.pixi"
	include "lib/gui/components/button.pixi"
	include "lib/gui/components/checkbox.pixi"
	include "lib/gui/components/gui_window_frame.pixi"
	include "lib/gui/components/text_message.pixi"
	include "lib/gui/preset_converter_options.pixi"


// main program, containing:

// 1. Start of the program, loading config if necessary, and
//    Loading any SunVox instance here, and these should be the only global objects

	logf("Hello World")
	



// 2. Function calls for front end of the program, drawing the ui or some demoscenes (if necessary)
// GUIs are also exceptions for global variable since the objects cannot be returned from function for some reason

	$options_gui = construct_preset_converter_options_gui()

	while $options_gui.children[17].has_clicked == 0 {
		clear()

		$options_gui.draw( $options_gui )
		handle_options_events($options_gui)

		frame()
	}


// 3&4. Function calls for file extractions and validations

	// Function calls...


// 5&6: Function calls for generating and exporting presets

	// Function calls...


// 7. function calls for front end of the program, drawing the ui or some demoscenes (if necessary)

	// Function calls...

	show_log()	// This is only for debug purpose