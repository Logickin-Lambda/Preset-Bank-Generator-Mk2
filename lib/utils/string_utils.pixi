ASCII_HORIZONTAL_TAB    = '\t'
ASCII_NEW_LINE          = '\n'
ASCII_VERTICAL_TAB      = '\v'
ASCII_FROM_FEED         = '\f'
ASCII_CARRIAGE_RETURN   = '\r'
ASCII_SPACE             = ' '


/*
 * For some reason, string cannnot be created uniquely using a function;
 * otherwise, it will keep on using the same instance.
 * This is commeneted so that I can remember string in pixilang must be declared in this way
 *
 * IMPORTANT: Don't try to refactor by grouping all the functions with string declaration, or it will break the program completely
 *            I know it becuase I have tried that before, and it introduces bugs when it use anything related to strings
 */
/*fn string_new(){
    $temp_str = ""
	$temp_str[0] = 0
}*/

fn string_is_blank($string){
    ret(!string_is_not_blank($string))
}

fn string_is_not_blank($string){

    $str_length = strlen($string)

    if $str_length <= 0 {
        ret(0)
    } 

    ret(check_white_space_of_a_string($string))
}

fn check_white_space_of_a_string($string){
    for ($i = 0; $i < strlen($string); $i + 1){
        $character = $string [$i]

        if  $character == ASCII_HORIZONTAL_TAB ||
            $character == ASCII_NEW_LINE ||
            $character == ASCII_VERTICAL_TAB ||
            $character == ASCII_FROM_FEED ||
            $character == ASCII_CARRIAGE_RETURN ||
            $character == ASCII_SPACE {
            
            continue
        } else {
            ret (1)  // non-white space found, return true
        }
    }
    ret (0) 
}

fn string_index_of($string, $target){
     for ($i = 0; $i < strlen($string); $i + 1){
        $character = $string [$i]

        if  $character == $target {
            ret ($i)
        }
    }
    ret (-1)    
}

fn string_index_of_last($string, $target){
     for ($i = strlen($string) - 1; $i >= 0; $i - 1){
        $character = $string [$i]

        if  $character == $target {
            ret ($i)
        }
    }
    ret (-1)    
}